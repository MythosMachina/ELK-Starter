name: elk-stack

networks:
  elk-net:
    name: elk-net
    driver: bridge

services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: es01
    restart: unless-stopped
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=${ES_JAVA_OPTS}
      # Security an, HTTP ohne TLS (dev)
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      # Logs in Datei (wird gemountet)
      - path.logs=/usr/share/elasticsearch/logs
      # Benutzerpasswort (Superuser)
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - /mnt/elastic_logs/elasticsearch/data:/usr/share/elasticsearch/data
      - /mnt/elastic_logs/elasticsearch/logs:/usr/share/elasticsearch/logs
      - ./configs/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    networks:
      - elk-net

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    restart: unless-stopped
    depends_on:
      - es01
    environment:
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_SERVICEACCOUNTTOKEN=${KIBANA_SERVICE_TOKEN}
      # Optional: öffentlich erreichbare Basis-URL (für Links)
      - SERVER_PUBLICBASEURL=${KIBANA_PUBLIC_URL:-http://localhost:5601}
    ports:
      - "5601:5601"
    volumes:
      - ./configs/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
      - /mnt/elastic_logs/kibana/logs:/usr/share/kibana/logs
    networks:
      - elk-net

  fleet-server:
    image: docker.elastic.co/beats/elastic-agent:${STACK_VERSION}
    container_name: fleet-server
    restart: unless-stopped
    depends_on:
      - es01
      - kibana
    environment:
      # Fleet Server aktivieren & an ES/Kibana koppeln (HTTP, ohne TLS)
      - FLEET_SERVER_ENABLE=1
      - FLEET_SERVER_ELASTICSEARCH_HOST=http://es01:9200
      - FLEET_SERVER_INSECURE_HTTP=true
      # (Ab neueren Releases erledigt Kibana die Fleet-Initialisierung selbst.
      #  KIBANA_FLEET_SETUP kann i.d.R. entfallen.)
      - KIBANA_HOST=http://kibana:5601
      - KIBANA_USERNAME=elastic
      - KIBANA_PASSWORD=${ELASTIC_PASSWORD}
      # Gemeinsame ES-Creds (werden auch vom Agent genutzt)
      - ELASTICSEARCH_HOST=http://es01:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - LOG_LEVEL=info
    ports:
      - "8220:8220"
    volumes:
      # Persistente Agent-/Fleet-Server-Daten & -Logs
      # Wichtig: Nur das Datenverzeichnis mounten – ein Bind auf /usr/share/elastic-agent
      # würde das Agent-Binary überschreiben und der Container könnte nicht starten.
      - /mnt/elastic_logs/fleet-server/agent:/usr/share/elastic-agent/data
      - /mnt/elastic_logs/fleet-server/logs:/var/log/elastic-agent
    networks:
      - elk-net
